// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvcRakuten.Models;

namespace mvcRakuten.Migrations
{
    [DbContext(typeof(MySQLDbContext))]
    partial class MySQLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("mvcRakuten.Models.Gender", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_time")
                        .HasColumnName("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("enable")
                        .HasColumnName("enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("update_time")
                        .HasColumnName("update_time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("gender");
                });

            modelBuilder.Entity("mvcRakuten.Models.Member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("birthday")
                        .HasColumnName("birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("create_time")
                        .HasColumnName("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("enable")
                        .HasColumnName("enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("gender")
                        .HasColumnName("gender")
                        .HasColumnType("int");

                    b.Property<string>("home")
                        .HasColumnName("home")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("id_code")
                        .IsRequired()
                        .HasColumnName("id_code")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("pid")
                        .IsRequired()
                        .HasColumnName("pid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("update_time")
                        .HasColumnName("update_time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("member");
                });

            modelBuilder.Entity("mvcRakuten.Models.Property", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("barcode")
                        .HasColumnName("barcode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("create_time")
                        .HasColumnName("create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("detail")
                        .HasColumnName("detail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("eid")
                        .IsRequired()
                        .HasColumnName("eid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("enable")
                        .HasColumnName("enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("imageurl")
                        .IsRequired()
                        .HasColumnName("imageurl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnName("location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("pid")
                        .IsRequired()
                        .HasColumnName("owner")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("price")
                        .HasColumnName("price")
                        .HasColumnType("double");

                    b.Property<DateTime>("update_time")
                        .HasColumnName("update_time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("property");
                });
#pragma warning restore 612, 618
        }
    }
}
